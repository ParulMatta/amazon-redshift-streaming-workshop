{
 "Resources": {
  "orderstream9D7BFD49": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "Name": "order_stream",
    "RetentionPeriodHours": 72,
    "StreamModeDetails": {
     "StreamMode": "ON_DEMAND"
    }
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/order-stream/Resource"
   }
  },
  "customerstream14D5928D": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "Name": "customer_stream",
    "RetentionPeriodHours": 72,
    "StreamModeDetails": {
     "StreamMode": "ON_DEMAND"
    }
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/customer-stream/Resource"
   }
  },
  "TableCD117FA1": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "TableName": "latest_key"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "IngestionStack/Table/Resource"
   }
  },
  "lambdalayerAEB0E7A7": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "8e10b2324200ebabf3753d61b5fd5a97cc55632ff95f3b228880944302a90b68.zip"
    },
    "CompatibleRuntimes": [
     "python3.8"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/lambda-layer/Resource",
    "aws:asset:path": "asset.8e10b2324200ebabf3753d61b5fd5a97cc55632ff95f3b228880944302a90b68",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "customerlambdaServiceRoleB14F5E0F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/customer-lambda/ServiceRole/Resource"
   }
  },
  "customerlambdaServiceRoleDefaultPolicyFFCA0010": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kinesis:DescribeStream",
        "kinesis:DescribeStreamSummary",
        "kinesis:GetRecords",
        "kinesis:GetShardIterator",
        "kinesis:ListShards",
        "kinesis:ListStreams",
        "kinesis:PutRecord",
        "kinesis:PutRecords",
        "kinesis:SubscribeToShard"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "customerstream14D5928D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TableCD117FA1",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "customerlambdaServiceRoleDefaultPolicyFFCA0010",
    "Roles": [
     {
      "Ref": "customerlambdaServiceRoleB14F5E0F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/customer-lambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "customerlambda38339C48": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "928ddc953af7663d1dbda43b5d0e33a394b895c09c7422484af12bb05cb43fe1.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "customerlambdaServiceRoleB14F5E0F",
      "Arn"
     ]
    },
    "Description": "Lambda function deployed using AWS CDK Python",
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "INFO",
      "STREAM_NAME": {
       "Ref": "customerstream14D5928D"
      }
     }
    },
    "FunctionName": "customer-lambda",
    "Handler": "customer_producer.lambda_handler",
    "Layers": [
     {
      "Ref": "lambdalayerAEB0E7A7"
     }
    ],
    "ReservedConcurrentExecutions": 1,
    "Runtime": "python3.8",
    "Timeout": 60
   },
   "DependsOn": [
    "customerlambdaServiceRoleDefaultPolicyFFCA0010",
    "customerlambdaServiceRoleB14F5E0F"
   ],
   "Metadata": {
    "aws:cdk:path": "IngestionStack/customer-lambda/Resource",
    "aws:asset:path": "asset.928ddc953af7663d1dbda43b5d0e33a394b895c09c7422484af12bb05cb43fe1",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "StepTriggerF2203960": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(1 minute)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "customerlambda38339C48",
        "Arn"
       ]
      },
      "Id": "Target0"
     },
     {
      "Arn": {
       "Fn::GetAtt": [
        "orderlambdaE327FE1E",
        "Arn"
       ]
      },
      "Id": "Target1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/StepTrigger/Resource"
   }
  },
  "StepTriggerAllowEventRuleIngestionStackcustomerlambdaCA45E66210437706": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "customerlambda38339C48",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "StepTriggerF2203960",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/StepTrigger/AllowEventRuleIngestionStackcustomerlambdaCA45E662"
   }
  },
  "StepTriggerAllowEventRuleIngestionStackorderlambda9279696EAAFA9958": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "orderlambdaE327FE1E",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "StepTriggerF2203960",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/StepTrigger/AllowEventRuleIngestionStackorderlambda9279696E"
   }
  },
  "orderlambdaServiceRoleFE8A34A6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/order-lambda/ServiceRole/Resource"
   }
  },
  "orderlambdaServiceRoleDefaultPolicy0EC5E799": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kinesis:DescribeStream",
        "kinesis:DescribeStreamSummary",
        "kinesis:GetRecords",
        "kinesis:GetShardIterator",
        "kinesis:ListShards",
        "kinesis:ListStreams",
        "kinesis:PutRecord",
        "kinesis:PutRecords",
        "kinesis:SubscribeToShard"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "orderstream9D7BFD49",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TableCD117FA1",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "orderlambdaServiceRoleDefaultPolicy0EC5E799",
    "Roles": [
     {
      "Ref": "orderlambdaServiceRoleFE8A34A6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/order-lambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "orderlambdaE327FE1E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bc57649401a43c3707288c70772ec509ae026a50795c90495b984c72991dfcfd.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "orderlambdaServiceRoleFE8A34A6",
      "Arn"
     ]
    },
    "Description": "Lambda function deployed using AWS CDK Python",
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "INFO",
      "STREAM_NAME": {
       "Ref": "orderstream9D7BFD49"
      }
     }
    },
    "FunctionName": "order-lambda",
    "Handler": "order_producer.lambda_handler",
    "Layers": [
     {
      "Ref": "lambdalayerAEB0E7A7"
     }
    ],
    "ReservedConcurrentExecutions": 1,
    "Runtime": "python3.8",
    "Timeout": 5
   },
   "DependsOn": [
    "orderlambdaServiceRoleDefaultPolicy0EC5E799",
    "orderlambdaServiceRoleFE8A34A6"
   ],
   "Metadata": {
    "aws:cdk:path": "IngestionStack/order-lambda/Resource",
    "aws:asset:path": "asset.bc57649401a43c3707288c70772ec509ae026a50795c90495b984c72991dfcfd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPQW/DIAyFf0vvhG3Nace10k47ROnUa+WA13kJIGFYFSH++4B00nZ6z/6eDd7LfS8fd3DjTum5W2iS6RRAzaK0Lmkmi0xcex7BiOOH3VwWerVgnC75d5gWrKiZLBYwkwaZ3mBFf0bP5GzF/+rXaFW4g79+QG+IayQL7i/AjIHlS5VSy0NUM4YDMAoCI9PotqebDm4htbYtzWWB32jLeBrjPVY0ZzEiu+gVira33Hsle238FxR/dFZTaB8Z1vDp7EMvn+XT7ouJOh9tIINy3PQH+LmFyEcBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "IngestionStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Outputs": {
  "ExportsOutputFnGetAttorderstream9D7BFD49Arn04B5B48C": {
   "Value": {
    "Fn::GetAtt": [
     "orderstream9D7BFD49",
     "Arn"
    ]
   },
   "Export": {
    "Name": "IngestionStack:ExportsOutputFnGetAttorderstream9D7BFD49Arn04B5B48C"
   }
  },
  "ExportsOutputFnGetAttcustomerstream14D5928DArnDE75F3B9": {
   "Value": {
    "Fn::GetAtt": [
     "customerstream14D5928D",
     "Arn"
    ]
   },
   "Export": {
    "Name": "IngestionStack:ExportsOutputFnGetAttcustomerstream14D5928DArnDE75F3B9"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}